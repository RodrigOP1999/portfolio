#Importando biblioteca
library(tidyverse)
library(lubridate)
library(ggplot2)
library(ggtext)

# Importação 
URL_dados <- c(
  'dado' = 'Coloque o caminho do seu dado')

dir.create('Dados/', showWarnings = FALSE)

#Caso tenha que baixar o dado de uma fonte externa
# Download dos arquivos por linha de comando:
for (i in seq_along(URL_dados)) {
  download.file(
    url = URL_dados[i],
    destfile = paste0('Dados/', names(URL_dados)[i], '.csv')
  )
  cat('Arquivo', i, 'baixado com sucesso!\n')
}

# Organização dos dados
Leitura_Personalizada <- function(Arquivo) {
  
  dados <-
    read_csv2(
      file = Arquivo,
      skip = 10,
      na = 'null') |>
    select(!starts_with('...')) |>
    rename_with(~c('Data', 'Evap', 'Prec', 'Temp', 'Umi', 'Vento')) |> #Exemplos de nomes das colunas de uma tabela
    mutate(ID = Arquivo |> str_remove_all('Dados/|\\.csv'))
  
  return(dados)
}

# Executando a função:
arq <- list.files(path = 'Dados/', pattern = '.csv', full.names = TRUE)
df <- purrr::map_df(.x = arq, .f = ~Leitura_Personalizada(Arquivo = .x))

# Heatmap
df %>% 
  filter(ID == "dado") %>% 
  group_by(Ano = year(Data), Mês = month(Data)) %>% 
  summarise(me = mean(Prec, na.rm = TRUE), .groups = "drop") %>% 
  ggplot(
    mapping = aes(x = Mês, 
                  y = Ano,
                  fill = me)
  ) +
  geom_tile(color = "white", linewidth = 0.5) +
  scale_fill_viridis_c(
    option = "turbo",
    begin = 0.1, end = 0.9,
    na.value = NA,
    label = scales::number_format(accuracy = 1, suffix = " mm")
  ) +
  scale_y_continuous(
    breaks = seq(1991, 2020, 5),  # Aumentando o intervalo para reduzir a densidade de rótulos
    trans = "reverse"
  ) +
  scale_x_continuous(
    breaks = 1:12,
    labels = month(1:12, label = TRUE) %>% str_to_title()
  ) +
  labs(
    x = "Meses", y = "Ano",
    fill = "Precipitação",
    title = "<span style='color:#000000'>NOME DO SEU TÍTULO</span>",
    caption = "Fonte dos dados xxxxx • Elaborado por @cienciacomfernandesr"
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "Montserrat", size = 10, lineheight = 0.3),  # Ajuste do tamanho do texto
    plot.title = ggtext::element_markdown(hjust = 0.5, lineheight = 0.4, halign = 0.5),
    panel.grid = element_blank(),
    legend.position = "bottom",
    legend.title.position = "top",
    legend.title = element_text(hjust = 0.5),
    legend.key.size = unit(8, "mm"),
    legend.key.height = unit(1, "mm")
  ) -> Heatmap

#Visualizando o gráfico
print(Heatmap)

#Salvando o gráfico
ggsave(
  filename = "heatmap.png",
  plot = Heatmap, 
  device = "png",
  width = 2000,  # Aumento do tamanho da imagem
  height = 1200,
  units = "px",
  bg = "white"
)
